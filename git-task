#!/bin/bash
set -e

function _git_task_add_note() {
local file=$1
shift
local task=$@
if [[ -z "$task" ]]; then
        echo "No task string!"
        exit 1
fi
echo "$task" >> $GIT_TASK_DIR/$file
}
function _git_task_delete_note() {
local file=$1
local task_index=$2
if [[ -z "$task_index" ]]; then
        echo "No task index to delete!"
        exit 1
fi
sed -i.bak -e "${task_index}d" $GIT_TASK_DIR/$file
# If we deleted the last line, delete the file
if [[ ! -s $GIT_TASK_DIR/$file ]]; then
        rm $GIT_TASK_DIR/$file
fi
}
function _git_task_list_notes() {
local file=$1
if [[ -f  $GIT_TASK_DIR/$file ]]; then
        if [[ -s $GIT_TASK_DIR/$file ]]; then
                echo "* $file *"
                cat -n $GIT_TASK_DIR/$file
        else
                echo "No tasks yet"
        fi
else
        echo "No tasks yet"
fi
}
function _git_task_print_help() {
echo "Usage:"
echo "  $0 add \"some task I should do\""
echo "  $0 list"
echo "  $0 rm <index of entry to delete from list>"
echo "  $0 undo"
}

cmd=$1
shift
task_args=$@

git_branch=$(git rev-parse --abbrev-ref HEAD)
jira_ticket=$(echo $git_branch | grep -Po "\/\K[A-Z]*-[0-9]*")

if [[ -z "${jira_ticket// }" ]]; then
        echo "No ticket number found, aborting"
        exit 1
fi

if [[ -z "$GIT_TASK_DIR" ]]; then
        echo "\$GIT_TASK_DIR is not set, unsure where to save tasks"
        exit 1
fi
if [[ ! -d "$GIT_TASK_DIR" ]]; then
        echo "\"$GIT_TASK_DIR\" is not an existing directory"
        exit 1
fi

case $cmd in
add)
        _git_task_add_note $jira_ticket $task_args
        ;;
remove)
        _git_task_delete_note $jira_ticket $task_args
        ;;
delete)
        _git_task_delete_note $jira_ticket $task_args
        ;;
rm)
        _git_task_delete_note $jira_ticket $task_args
        ;;
list)
        _git_task_list_notes $jira_ticket
        ;;
help)
        _git_task_print_help
        ;;
*)
        echo "Bad command ($cmd) to $0"
        echo
        _git_task_print_help
        exit 1
        ;;
esac
